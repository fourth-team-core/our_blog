# Generated by Django 4.0.6 on 2022-07-27 12:05

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='PostCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('url', models.URLField(verbose_name='category url')),
                ('name', models.CharField(max_length=64, unique=True, verbose_name='category name')),
            ],
            options={
                'verbose_name': 'post category',
                'verbose_name_plural': 'post categories',
                'db_table': 'post_categories',
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('url', models.URLField(verbose_name='tag url')),
                ('name', models.CharField(max_length=10, verbose_name='tag name')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'tag',
                'verbose_name_plural': 'tags',
                'db_table': 'tags',
            },
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=128, verbose_name='post title')),
                ('url', models.URLField(unique=True, verbose_name='post url')),
                ('content', models.TextField(verbose_name='content')),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('published', 'Published')], default='draft', max_length=10)),
                ('likes_count', models.BigIntegerField(default=0)),
                ('published_at', models.DateTimeField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to=settings.AUTH_USER_MODEL, verbose_name='post author')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='mainapp.postcategory', verbose_name='post category')),
                ('tags', models.ManyToManyField(related_name='post_tags', to='mainapp.tag')),
            ],
            options={
                'db_table': 'posts',
                'ordering': ('-published_at',),
            },
        ),
        migrations.CreateModel(
            name='Like',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to=settings.AUTH_USER_MODEL)),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='mainapp.post')),
            ],
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('parent_id', models.BigIntegerField(verbose_name='parent id')),
                ('url', models.URLField(unique=True, verbose_name='post url')),
                ('content', models.TextField(verbose_name='content')),
                ('published_at', models.DateTimeField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to=settings.AUTH_USER_MODEL, verbose_name='post author')),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='mainapp.post', verbose_name='post')),
            ],
            options={
                'db_table': 'comments',
            },
        ),
    ]
